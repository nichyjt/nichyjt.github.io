<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Nicholas Yek :waffle:</title><link>https://nichyjt.github.io/projects/</link><description>Recent content in Projects on Nicholas Yek :waffle:</description><generator>Hugo -- gohugo.io</generator><language>en-sg</language><copyright>Nicholas Yek</copyright><lastBuildDate>Tue, 30 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://nichyjt.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>FindNUS :telescope:</title><link>https://nichyjt.github.io/projects/findnus/</link><pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/projects/findnus/</guid><description>What is FindNUS? FindNUS is a lost and found web application that my pal Jin Xuan and I built over summer 2022.
FindNUS was awarded the highest level of achivement, given to only the top 7% of teams (top 29 of 414 teams) for NUS School of Computing&amp;rsquo;s 2022 iteration of Orbital, an independent software development module.
We built FindNUS because we felt that the current lost and found website in NUS sucks and we could do better.</description></item><item><title>SnipNScan :camera:</title><link>https://nichyjt.github.io/projects/snipnscan/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/projects/snipnscan/</guid><description>Image Hell A picture is worth a thousand words - A common adage
Images are a rich source of information. But what worth is that thousand words if I can&amp;rsquo;t extract the actual text inside the images? Let me explain my frustration about images.
Webinar Link Hell Imagine yourself in some online conference. Stare in wonder as the presenter asks you to access some (long-ass) link on their screen share. Extra points if the presenter does not drop the link into chat - good luck typing it into your browser before they move on!</description></item><item><title>Cnake :snake:</title><link>https://nichyjt.github.io/projects/cnake/</link><pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/projects/cnake/</guid><description>I thought it would be fun to make a one-shot snake game project to familiarise myself with the ncurses library and play around with some data structures, which led to this ripoff snake game you can find on my GitHub.
If you&amp;rsquo;re interested, you can take a look and perhaps give it a go!
The following sections of this post are just some code discussions for the nerds.
Building Cnake I won&amp;rsquo;t talk too much about the ncurses library and will be writing more about the things I found interesting while building this project, mainly, these questions I had to answer while making the game.</description></item><item><title>Sudoku.py</title><link>https://nichyjt.github.io/projects/sudoku/</link><pubDate>Sun, 30 May 2021 21:08:04 +0800</pubDate><guid>https://nichyjt.github.io/projects/sudoku/</guid><description>Sudoku Squares are elegant, and frankly, magical.1 With pockets of time being freed up with work from home orders during the COVID-19 pandemic, I picked up Sudoku to fill in the gaps. And man, it&amp;rsquo;s fun solving them - it&amp;rsquo;s cathartic seeing the numbers fall nicely into place.
It&amp;rsquo;s one thing to solve Sudokus, but another to create one.
Out of curiosity, I decided to try and make a fully filled Sudoku Grid by hand.</description></item></channel></rss>