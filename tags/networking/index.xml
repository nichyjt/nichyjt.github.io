<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networking on Nicholas Yek</title><link>https://nichyjt.github.io/tags/networking/</link><description>Recent content in Networking on Nicholas Yek</description><generator>Hugo -- gohugo.io</generator><language>en-sg</language><copyright>Nicholas Yek</copyright><lastBuildDate>Thu, 17 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://nichyjt.github.io/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>An observation about Docker iptables</title><link>https://nichyjt.github.io/essays/2025/simple_docker_networks/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/essays/2025/simple_docker_networks/</guid><description>&amp;ldquo;How do Docker containers talk?&amp;rdquo; is surprisingly interesting. The rabbit hole down containerization is deep. I skim the surface here very quickly. This should not be seen as incredibly technically complete.
Container networks in a nutshell Initialization:
When you install Docker, the docker daemon creates a network interface, (e.g. default is docker0). This network interface is a bridge.
This bridge typically has the &amp;lsquo;gateway&amp;rsquo; ip address &amp;ldquo;X.X.X.1&amp;rdquo;, and by default has a subnet of /16, meaning it can support 2^16 hosts.</description></item></channel></rss>