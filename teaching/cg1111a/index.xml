<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CG1111A AY23/24 Helpsite, Lab 1 &amp; 2 on Nicholas Yek</title><link>https://nichyjt.github.io/teaching/cg1111a/</link><description>Recent content in CG1111A AY23/24 Helpsite, Lab 1 &amp; 2 on Nicholas Yek</description><generator>Hugo -- gohugo.io</generator><language>en-sg</language><copyright>Nicholas Yek</copyright><lastBuildDate>Sun, 22 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://nichyjt.github.io/teaching/cg1111a/index.xml" rel="self" type="application/rss+xml"/><item><title>Hardware Debugging Tips</title><link>https://nichyjt.github.io/teaching/cg1111a/hardware_debugging/</link><pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/hardware_debugging/</guid><description>By now you would have experienced the joys of debugging hardware.
You probably have some ideas on how to make debugging less painful, but have not been formally &amp;rsquo;taught&amp;rsquo; this yet.
As requested by some of you and in view of your upcoming project, I will share some pointers for building your hardware and making the debugging experience more pleasant. You are welcome to share these tips with your peers! #opensource</description></item><item><title>Embedded Programming Tips</title><link>https://nichyjt.github.io/teaching/cg1111a/coding_tips/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/coding_tips/</guid><description>Overall Guidelines The overall guideline is very similar to your lab report. Prioritize being explicit and clear. As you do more team coding projects like Orbital or CS2113, you will experience firsthand why this matters.
Apart from the specific tips I will showcase later, your standard good coding practices apply.
Make sure your code is well-factored and commented so that your peers (and yourself) don&amp;rsquo;t forget what your code is supposed to do.</description></item><item><title>Debugging hacks with your Multimeter</title><link>https://nichyjt.github.io/teaching/cg1111a/multimeter_debug/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/multimeter_debug/</guid><description>You&amp;rsquo;ve been issued a multimeter for this course.
It can do so much more than just measuring V, I, R.
I will share with you two additional things you can do with your multimeter that will be useful for this course, as well as for EG1311 and the other modules you take that require a multimeter.
Continuity Testing Your multimeter has a function that can test if a circuit is open or closed.</description></item><item><title>Complex Number Primer</title><link>https://nichyjt.github.io/teaching/cg1111a/complex_numbers/</link><pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/complex_numbers/</guid><description>Complex numbers in the context of CG1111A is not too challenging.
With enough practice, it is easy to solve complex number questions in CG1111A.
src: xkcd 2028 Useful Formulae Consider an arbitrary complex number $x(t)$:
$ \text{1. Cartesian form: } x(t) = a(t) + jb(t) \\ ~ \\ \text{2. Polar form: } x(t) = r(t)e^{j \theta(t)} \begin{cases} r(t) = \sqrt{a^2 + b^2} \\ \theta(t) = \angle{x} = tan^{-1}(\frac{b}{a}) \end{cases} $</description></item><item><title>Lab reports - Optimizing for readability</title><link>https://nichyjt.github.io/teaching/cg1111a/lab_reports/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/lab_reports/</guid><description>Lab Reports and University The purpose In my opinion&amp;hellip; of the Lab report is not only for the teaching team to check your understanding of the material but also for you to consolidate your learning and also practice organizing your thoughts on paper (or digital paper&amp;hellip;) in a structured way.
You need to get used to writing. Lab reports, and by extension, academic writing, are the bread and butter of the academic world, even for an undergraduate.</description></item><item><title>Welcome to Computer Engineering</title><link>https://nichyjt.github.io/teaching/cg1111a/welcome/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><guid>https://nichyjt.github.io/teaching/cg1111a/welcome/</guid><description>Welcome! Hello and welcome to CG1111A! ðŸ™Œ
Congratulations on getting into Computer Engineering! ðŸŽ‰
It was NOT easy getting here. Our IGP is pretty darn high.
Your academic career will see you touch MANY aspects of the computing world. You will explore a fair bit of the Computing world, from the lower levels e.g. Logic gates, transistors&amp;hellip; of abstraction to the higher levels e.g. Algorithms, machine learning .
Your first year here will be as fulfilling as it is challenging.</description></item></channel></rss>